
# return if we are not in a tty
[ -z "$PS1" ] && return

export EDITOR=vim

alias rm='rm -I'
alias cd..='cd ..'
alias ll='ls -al --color=auto'

# To add git infos in the PS1
function parse_git_dirty {
  git diff --no-ext-diff --quiet --exit-code &> /dev/null || echo "*"
}

function parse_git_branch {
  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/(\1$(parse_git_dirty))/"
}

# a cool PS1 with git infos
# Includes history -a to ensure it's preserved on every command, not on shell exit
PS1="\$(history -a)\u\[$(tput bold)\]\[$(tput sgr0)\]\[\033[38;5;196m\]@\H\[$(tput sgr0)\]\[$(tput sgr0)\]\[\033[38;5;15m\] [\w] {\[$(tput sgr0)\]\[\033[38;5;4m\]\$?\[$(tput sgr0)\]\[\033[38;5;15m\]} \$(parse_git_branch) \n\[$(tput bold)\]\\$\[$(tput sgr0)\] \[$(tput sgr0)\]"
shopt -s histappend

## will set the terminal title to the current command
trap 'printf "\033]0;%s\007" "${BASH_COMMAND//[^[:print:]]/}"' DEBUG

joined-tmux() {
  tmux -u attach -d -t $1 || tmux -u new -s $1 
}

alias jointmux=joined-tmux

command="jointmux `basename $PWD`"
alias pwdtmux="$command"

CLEAN_HOSTNAME="${HOSTNAME//\./-}"
# This creates an alias to quick join or create a session that has the hostname as a session name
command="jointmux $CLEAN_HOSTNAME"
alias htmux="$command"

alias kpptmux="tmuxifier load-session kpp"

git config --global credential.helper cache

if which kubecolor >/dev/null; then
  alias kubectl="kubecolor"
fi

if which kubectl >/dev/null 2>&1; then
  source <(kubectl completion bash)
  complete -o default -F __start_kubectl k
  alias k=kubectl
fi

if `which fortune > /dev/null 2>&1`; then
  alias gco='git commit -a -m"$(fortune -n 50 -s)"'
else
  alias gco='git commit -a'
fi
alias gpush='git push origin HEAD'
alias grh='git reset HEAD --hard'
alias gfo='git fetch origin'
alias gr='git rebase'
alias gm='git merge'

# At some point, should remove those
alias qco=gco
alias qpush=gpush

fix-tmux-ssh() {
  eval $(tmux show-env -s |grep '^SSH_')
}

BLE_ENABLE=${BLE_ENABLE:-yes}
if [ "$BLE_ENABLE" = "yes" ] && [ -f /usr/local/etc/ble.sh/out/ble.sh ]; then
  source /usr/local/etc/ble.sh/out/ble.sh
  bind '"\e\C-?": backward-kill-word'
fi

if [ -f /usr/local/etc/.fzf.bash ]; then
  export PATH="/usr/local/etc/fzf/bin/:$PATH"
  source /usr/local/etc/.fzf.bash
  _ble_contrib_fzf_base=/usr/local/etc/fzf


	_fzf_comprun() {
		local command=$1
		shift

		case "$command" in
			cd)           fzf --preview 'ls -l {} | head -200'   "$@" ;;
			export|unset|echo) fzf --preview "eval 'echo \$'{}"         "$@" ;;
			ssh)          fzf --preview 'comm -13 <(ssh -T -G non-existing-host | sort) <(ssh -T -G {} | sort)'                   "$@" ;;
			*)            fzf --preview 'bat -n --color=always {}' "$@" ;;
		esac
	}

	complete -o default -o nospace -v -F _fzf_var_completion echo
fi

if [ -d /usr/local/etc/.tmuxifier ]; then
  export PATH="/usr/local/etc/.tmuxifier/bin:$PATH"
  export TMUXIFIER_LAYOUT_PATH=/usr/local/etc/tmuxifiers/
  eval "$(tmuxifier init -)"
fi

export PATH="/opt/nvim-linux64/bin:$PATH"

# Lines below are an ugly hack to set the title to 'new-session' via a dummy command
new-session () {
  nothing > /dev/null 2>&1
}
new-session
